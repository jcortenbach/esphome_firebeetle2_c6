esphome:
  name: ${device_id}
  name_add_mac_suffix: true
  project:
    name: "${project_name}"
    version: "${project_version}"

external_components:
  - source:
      type: local
      path: components
  # Remove post 2024.04?
  - source: github://luar123/esphome@fix_logger
    components:
      - logger

esp32:
  board: esp32-c6-devkitm-1
  variant: esp32c6
  flash_size: 4MB
  framework:
    type: esp-idf
    version: 5.2.1
    platform_version: 6.6.0
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y

logger:
  level: INFO
  baud_rate: 921600
  hardware_uart: USB_SERIAL_JTAG

api:
  encryption:
    key: !secret api_key
  on_client_connected:
  # Update the important sensors.
  - component.update: uptime0
  - component.update: battery_voltage
  # Sleep to ensure the updates go through.
  - delay: 1s
  - deep_sleep.enter:
      id: deep_sleep0
      # Sleep until the start of the next cycle. Note that `sleep_duration` is in ms.
      sleep_duration: !lambda |-
        auto now = id(homeassistant_time).now().timestamp;
        return (std::ceil(now/300.0)*300 - now) * 1e3;

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: "HIGH"
  # Connect to the first AP found.
  fast_connect: true

deep_sleep:
  id: deep_sleep0
  # Ensure the device sleeps even if Wifi or Home Assistant is unavailable.
  run_duration: 60s
  sleep_duration: ${sleep_duration}

switch:
  - platform: restart
    name: Restart

light:
  - platform: status_led
    name: "LED"
    id: led
    pin: GPIO15

sensor:
  - platform: uptime
    name: Uptime
    id: uptime0
    update_interval: 15s

  - platform: adc
    pin: GPIO0
    name: Battery voltage
    id: battery_voltage
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    # IDF 5.2.1 does not support 11dB
    attenuation: 12db
    # Read and average the results.
    update_interval: 200ms
    filters:
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5
          send_first_at: 5
      - throttle: 10s
      # VBAT goes through a 2:1 voltage divider.
      - multiply: 2
      # My board mildly overestimates the voltage
      - multiply: 0.98
    on_value:
      - component.update: battery_level

  - platform: template
    name: Battery level
    id: battery_level
    unit_of_measurement: '%'
    device_class: battery
    state_class: measurement
    icon: mdi:battery-high
    lambda: "return id(battery_voltage).state;"
    filters:
      - calibrate_linear:
          - 3.45 -> 0.0
          - 4.20 -> 100.0
      - clamp:
          min_value: 0
          max_value: 100

time:
  - platform: homeassistant
    id: homeassistant_time
